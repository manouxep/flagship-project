"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FlagshipLogger = {
    getLogger: function (config, name) {
        if (name === void 0) { name = 'Flagship SDK'; }
        var enableConsoleLogs = config.enableConsoleLogs, nodeEnv = config.nodeEnv;
        var printTimestamp = function () { return "[" + new Date().toISOString().slice(11, -5) + "]"; };
        return {
            warn: function (str) { return (enableConsoleLogs ? console.warn(printTimestamp() + " - " + name + " - " + str) : null); },
            error: function (str) { return (enableConsoleLogs ? console.error(printTimestamp() + " - " + name + " - " + str) : null); },
            info: function (str) { return (enableConsoleLogs ? console.log(printTimestamp() + " - " + name + " - " + str) : null); },
            fatal: function (str) {
                return enableConsoleLogs ? console.error(printTimestamp() + " - FATAL - " + name + " - " + str) : null;
            },
            debug: function (str) {
                return nodeEnv && nodeEnv !== 'production' && enableConsoleLogs
                    ? console.log(printTimestamp() + " - DEBUG - " + name + " - " + str)
                    : null;
            }
        };
    }
};
exports.FlagshipCommon = {
    createVisitorId: function () {
        var now = new Date();
        var random = Math.floor(Math.random() * (99999 - 10000) + 10000);
        var twoDigits = function (val) { return (val.toString().length === 1 ? "0" + val : val); };
        return "" + now.getFullYear() + twoDigits(now.getMonth() + 1) + twoDigits(now.getDate()) + twoDigits(now.getHours()) + twoDigits(now.getMinutes()) + random;
    }
};
exports.default = FlagshipLogger;
//# sourceMappingURL=index.js.map