import { FsModifsRequestedList, GetModificationsOutput, GetModificationInfoOutput, HitShape } from '@flagship.io/js-sdk';
import { FsStatus } from './FlagshipContext';
declare type ModificationKeys = Array<string>;
declare type UseFsActivateOutput = void;
declare type UseFsModificationsOutput = GetModificationsOutput;
export declare const useFsActivate: (modificationKeys: ModificationKeys, applyEffectScope?: any[]) => UseFsActivateOutput;
export declare const useFsModifications: (modificationsRequested: FsModifsRequestedList, activateAllModifications?: boolean) => UseFsModificationsOutput;
export declare type UseFlagshipParams = {
    modifications: {
        requested: FsModifsRequestedList;
        activateAll?: boolean;
    };
};
export declare type UseFlagshipOutput = {
    modifications: GetModificationsOutput;
    getModificationInfo: (key: string) => Promise<null | GetModificationInfoOutput>;
    synchronizeModifications(activate: boolean): Promise<number>;
    startBucketingPolling(): {
        success: boolean;
        reason?: string;
    };
    stopBucketingPolling(): {
        success: boolean;
        reason?: string;
    };
    status: FsStatus;
    hit: {
        send(hit: HitShape): void;
        sendMultiple(hits: HitShape[]): void;
    };
};
export declare const useFlagship: (options?: UseFlagshipParams | undefined) => UseFlagshipOutput;
export {};
